% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pyr6.r
\name{PythonEnv}
\alias{PythonEnv}
\title{Python Environment}
\description{
The Python Environment Class. Provides an interface to a Python process.
}
\section{Usage}{

\preformatted{py = PythonEnv$new(port, path)

py$start
py$running
py$exec(...)
py$set(...)
py$get(varname)
py$stop
py$kill

print(py)
}
}

\section{Arguments}{

\code{port} The port to use for communication with Python.

\code{path} The path to the Python executable.

\code{varname} The name of a Python variable to bring into R.

\code{...} Commands to run or named variables to set in the Python process.
}

\section{Methods}{

\code{$new} Initialize a Python interface. The Python process is not 
  started automatically.
  
\code{$start} Start the Python process. The Python process runs 
  asynchronously.

\code{$running} Check if the Python process is running.

\code{$port} Set or get the port of the Python interface. The port 
  cannot be changed when the Python process is running.

\code{$pid} Get the Process ID of the Python interface. Useful for
  diagnosing problems.

\code{$stop} Stop the Python process by sending a request to the 
  Python process.

\code{$kill} Forcibly terminate the Python process. Useful when
  \code{$stop} fails or hangs.

\code{$set(...)} Set variables in the Python process. R variables
  are encoded into JSON format, sent to the Python process as text,
  and decoded into variables on the Python side.

\code{$get(varname)} Get a variable from the Python process. Python
  variables are encoded into JSON format, sent to R as text,
  and decoded into variables on the R side.
  
\code{$exec(...)} Execute the specified Python commands and invisibly 
  return printed Python output (if any). 

\code{print(py)} or \code{py$print()} shows some information about the
Python process on the screen, whether it is running and its process id, 
etc.
}

\examples{
pypath = Sys.which('python') 
if(nchar(pypath) > 0) {
  py = PythonEnv$new(port = 1234, path = pypath)
  py$start
  py$running
  py$set(a = 5)
  py$get('a')
  py$stop
} else {
  message("No Python environment available")
}
}
